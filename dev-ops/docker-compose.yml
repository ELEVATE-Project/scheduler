version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:3.8.0'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - elevate_net
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    logging:
      driver: none
  kafka:
    image: 'bitnami/kafka:3.1.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - elevate_net
    volumes:
      - kafka-data:/bitnami/kafka
    logging:
      driver: none
  mongo:
    image: 'mongo:4.4.14'
    restart: 'always'
    ports:
      - '27017:27017'
    networks:
      - elevate_net
    volumes:
      - mongo-data:/data/db
    logging:
      driver: none
  scheduler:
    build: '../'
    image: elevate/user:1.0
    volumes:
      - ../src/:/var/src
    ports:
      - '4000:4000'
    command: [ 'node', 'app.js' ]
    environment:
      - MONGODB_URL=mongodb://mongo:27017/tl-cron-rest
      - KAFKA_URL=kafka:9092
    depends_on:
      - kafka
      - mongo
    networks:
      - elevate_net
networks:
  elevate_net:
    external: false
volumes:
  zookeeper-data:
  kafka-data:
  mongo-data:
